Given an integer array nums, reorder it such that nums[0] < nums[1] > nums[2] < nums[3]....

You may assume the input array always has a valid answer.

 

Example 1:

Input: nums = [1,5,1,1,6,4]
Output: [1,6,1,5,1,4]
Explanation: [1,4,1,5,1,6] is also accepted.
Example 2:

Input: nums = [1,3,2,2,3,1]
Output: [2,3,1,3,1,2]
 
 
 solutions:
 
 class Solution {
public:
    void wiggleSort(vector<int>& nums) {
       int n=nums.size();
       //max heap
       priority_queue<int>pq;
       for(int x:nums) pq.push(x);
       //put the top large values in odd positions
       //ex-> [1,5,1,1,6,4]------>[_6_5_4_]
       int i=1;
       while(pq.size() and i<n){
           nums[i]=pq.top();
           pq.pop();
           i+=2;
       }
       //put remaining values in even position
       //[1,6,5,1,4,1] 
       int j=0;
       while(pq.size() and j<n){
           nums[j]=pq.top();
           pq.pop();
           j+=2;
       }
     //upvote if u like the solution 
    }
